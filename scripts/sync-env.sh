#!/bin/bash

# GitHub SecretsÏôÄ Î°úÏª¨ .env ÎèôÍ∏∞Ìôî Ïä§ÌÅ¨Î¶ΩÌä∏
# ÏÇ¨Ïö©Î≤ï:
#   Î°úÏª¨ ‚Üí GitHub: ./scripts/sync-env.sh to-github [.env ÌååÏùº]
#   GitHub ‚Üí Î°úÏª¨: ./scripts/sync-env.sh from-github [Ï∂úÎ†• ÌååÏùº]

set -e

MODE="${1}"
ENV_FILE="${2:-.env.production}"

# ÏÉâÏÉÅ Ï†ïÏùò
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# GitHub CLI ÌôïÏù∏
check_gh_cli() {
    if ! command -v gh &> /dev/null; then
        echo -e "${RED}‚ùå GitHub CLIÍ∞Ä ÏÑ§ÏπòÎêòÏñ¥ ÏûàÏßÄ ÏïäÏäµÎãàÎã§.${NC}"
        echo "   ÏÑ§Ïπò: https://cli.github.com/"
        exit 1
    fi

    if ! gh auth status &> /dev/null; then
        echo -e "${RED}‚ùå GitHubÏóê Î°úÍ∑∏Ïù∏ÎêòÏñ¥ ÏûàÏßÄ ÏïäÏäµÎãàÎã§.${NC}"
        gh auth login
    fi
}

# .env ‚Üí GitHub Secrets
sync_to_github() {
    echo "üîÑ Î°úÏª¨ .env ‚Üí GitHub Secrets ÎèôÍ∏∞Ìôî"
    echo "ÎåÄÏÉÅ ÌååÏùº: $ENV_FILE"
    echo ""

    if [ ! -f "$ENV_FILE" ]; then
        echo -e "${RED}‚ùå $ENV_FILE ÌååÏùºÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.${NC}"
        exit 1
    fi

    check_gh_cli

    # ÌôïÏù∏
    echo -e "${YELLOW}‚ö†Ô∏è  Í≤ΩÍ≥†: GitHub SecretsÍ∞Ä ÎçÆÏñ¥ÏîåÏõåÏßëÎãàÎã§!${NC}"
    read -p "Í≥ÑÏÜçÌïòÏãúÍ≤†ÏäµÎãàÍπå? (y/N): " confirm
    if [[ ! "$confirm" =~ ^[Yy]$ ]]; then
        echo "Ï∑®ÏÜåÎêòÏóàÏäµÎãàÎã§."
        exit 0
    fi

    echo ""
    echo "ÎèôÍ∏∞Ìôî ÏãúÏûë..."
    echo ""

    # .env ÌååÏùºÏóêÏÑú ÌôòÍ≤Ω Î≥ÄÏàò Ï∂îÏ∂ú Î∞è ÏóÖÎ°úÎìú
    COUNT=0
    while IFS='=' read -r key value; do
        # Ï£ºÏÑùÍ≥º Îπà Ï§Ñ Í±¥ÎÑàÎõ∞Í∏∞
        [[ "$key" =~ ^#.*$ ]] && continue
        [[ -z "$key" ]] && continue

        # Í∞íÏùò ÏïûÎí§ Í≥µÎ∞± Ï†úÍ±∞ Î∞è Îî∞Ïò¥Ìëú Ï†úÍ±∞
        value=$(echo "$value" | sed -e 's/^"//' -e 's/"$//' -e "s/^'//" -e "s/'$//")

        # Îπà Í∞íÏùÄ Í±¥ÎÑàÎõ∞Í∏∞
        if [ -z "$value" ]; then
            echo -e "${YELLOW}‚ö†Ô∏è  $key: Í∞íÏù¥ ÎπÑÏñ¥ÏûàÏñ¥ Í±¥ÎÑàÎúÅÎãàÎã§${NC}"
            continue
        fi

        # GitHub Secret ÏÉùÏÑ±/ÏóÖÎç∞Ïù¥Ìä∏
        if gh secret set "$key" --body "$value" 2>/dev/null; then
            if [[ "$key" =~ (SECRET|PASS|PASSWORD|KEY|TOKEN) ]]; then
                echo -e "${GREEN}‚úÖ $key: ***MASKED***${NC}"
            else
                echo -e "${GREEN}‚úÖ $key${NC}"
            fi
            ((COUNT++))
        else
            echo -e "${RED}‚ùå $key: ÏóÖÎ°úÎìú Ïã§Ìå®${NC}"
        fi
    done < "$ENV_FILE"

    echo ""
    echo "======================================"
    echo -e "${GREEN}‚úÖ $COUNTÍ∞ú Secret ÎèôÍ∏∞Ìôî ÏôÑÎ£å!${NC}"
    echo "======================================"
}

# GitHub Secrets ‚Üí .env
sync_from_github() {
    echo "üîÑ GitHub Secrets ‚Üí Î°úÏª¨ .env ÎèôÍ∏∞Ìôî"
    echo "Ï∂úÎ†• ÌååÏùº: $ENV_FILE"
    echo ""

    check_gh_cli

    # Î∞±ÏóÖ
    if [ -f "$ENV_FILE" ]; then
        BACKUP_FILE="${ENV_FILE}.backup.$(date +%Y%m%d_%H%M%S)"
        cp "$ENV_FILE" "$BACKUP_FILE"
        echo -e "${GREEN}‚úÖ Í∏∞Ï°¥ ÌååÏùº Î∞±ÏóÖ: $BACKUP_FILE${NC}"
    fi

    echo "GitHub Secrets Í∞ÄÏ†∏Ïò§Îäî Ï§ë..."
    echo ""

    # Secret Î™©Î°ù Í∞ÄÏ†∏Ïò§Í∏∞
    SECRETS=$(gh secret list --json name -q '.[].name')

    if [ -z "$SECRETS" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  ÏÑ§Ï†ïÎêú SecretÏù¥ ÏóÜÏäµÎãàÎã§.${NC}"
        exit 0
    fi

    # .env ÌååÏùº Ìó§Îçî
    cat > "$ENV_FILE" << 'EOF'
# Generated from GitHub Secrets
# Generated at:
EOF
    date >> "$ENV_FILE"
    echo "" >> "$ENV_FILE"

    # Ïπ¥ÌÖåÍ≥†Î¶¨Î≥ÑÎ°ú Secret Í∑∏Î£πÌôî
    declare -A CATEGORIES=(
        ["APP"]="NODE_ENV PORT FRONTEND_URL"
        ["SESSION"]="SESSION_SECRET SESSION_MAX_AGE COOKIE_DOMAIN COOKIE_SAMESITE"
        ["DATABASE"]="MONGO_URI REDIS_URL"
        ["EMAIL"]="EMAIL_SERVICE EMAIL_USER EMAIL_PASS"
        ["ADMIN"]="ADMIN_EMAILS"
        ["OAUTH_GOOGLE"]="GOOGLE_CLIENT_ID GOOGLE_CLIENT_SECRET"
        ["OAUTH_APPLE"]="APPLE_CLIENT_ID APPLE_TEAM_ID APPLE_KEY_ID APPLE_PRIVATE_KEY"
        ["RATE_LIMIT"]="API_LIMIT_DEFAULT_WINDOW_MS API_LIMIT_DEFAULT_MAX API_LIMIT_STRICT_WINDOW_MS API_LIMIT_STRICT_MAX API_LIMIT_RELAXED_WINDOW_MS API_LIMIT_RELAXED_MAX"
        ["GRAFANA"]="GRAFANA_ADMIN_USER GRAFANA_ADMIN_PASSWORD"
        ["DEPLOY"]="SERVER_HOST SERVER_USERNAME SERVER_PORT DEPLOY_PATH"
    )

    # Í∞Å Ïπ¥ÌÖåÍ≥†Î¶¨Î≥ÑÎ°ú Ï≤òÎ¶¨
    for category in "${!CATEGORIES[@]}"; do
        FOUND=false
        TEMP_OUTPUT=""

        for key in ${CATEGORIES[$category]}; do
            if echo "$SECRETS" | grep -q "^${key}$"; then
                if [ "$FOUND" = false ]; then
                    TEMP_OUTPUT+="# $category\n"
                    FOUND=true
                fi

                # SecretÏùÄ ÏßÅÏ†ë Í∞ÄÏ†∏Ïò¨ Ïàò ÏóÜÏúºÎØÄÎ°ú ÌîåÎ†àÏù¥Ïä§ÌôÄÎçî ÏÇ¨Ïö©
                TEMP_OUTPUT+="${key}=<SET_IN_GITHUB_SECRETS>\n"
                echo -e "${GREEN}‚úÖ $key${NC}"
            fi
        done

        if [ "$FOUND" = true ]; then
            echo -e "$TEMP_OUTPUT" >> "$ENV_FILE"
            echo "" >> "$ENV_FILE"
        fi
    done

    # Ïπ¥ÌÖåÍ≥†Î¶¨Ïóê ÏóÜÎäî ÎÇòÎ®∏ÏßÄ Secret Ï≤òÎ¶¨
    echo "# OTHER" >> "$ENV_FILE"
    while IFS= read -r key; do
        # Ïù¥ÎØ∏ Ï≤òÎ¶¨Îêú SecretÏù∏ÏßÄ ÌôïÏù∏
        PROCESSED=false
        for category_keys in "${CATEGORIES[@]}"; do
            if echo "$category_keys" | grep -wq "$key"; then
                PROCESSED=true
                break
            fi
        done

        if [ "$PROCESSED" = false ]; then
            echo "${key}=<SET_IN_GITHUB_SECRETS>" >> "$ENV_FILE"
            echo -e "${GREEN}‚úÖ $key${NC}"
        fi
    done <<< "$SECRETS"

    # ÌååÏùº Í∂åÌïú ÏÑ§Ï†ï
    chmod 600 "$ENV_FILE"

    echo ""
    echo "======================================"
    echo -e "${GREEN}‚úÖ Secret Î™©Î°ù ÎèôÍ∏∞Ìôî ÏôÑÎ£å!${NC}"
    echo "======================================"
    echo ""
    echo -e "${YELLOW}‚ö†Ô∏è  Ï£ºÏùò: Secret Í∞íÏùÄ Î≥¥ÏïàÏÉÅ GitHubÏóêÏÑú ÏßÅÏ†ë Í∞ÄÏ†∏Ïò¨ Ïàò ÏóÜÏäµÎãàÎã§.${NC}"
    echo "   ÌååÏùºÏóê ÌîåÎ†àÏù¥Ïä§ÌôÄÎçîÍ∞Ä ÏÇΩÏûÖÎêòÏóàÏäµÎãàÎã§."
    echo "   Ïã§Ï†ú Í∞íÏùÄ GitHub Secrets ÌéòÏù¥ÏßÄÏóêÏÑú ÌôïÏù∏ÌïòÏÑ∏Ïöî."
}

# ÎèÑÏõÄÎßê
show_help() {
    echo "ÏÇ¨Ïö©Î≤ï:"
    echo "  $0 to-github [.env ÌååÏùº]     # Î°úÏª¨ .env ‚Üí GitHub Secrets"
    echo "  $0 from-github [Ï∂úÎ†• ÌååÏùº]   # GitHub Secrets ‚Üí Î°úÏª¨ .env (ÌÖúÌîåÎ¶ø)"
    echo ""
    echo "ÏòàÏãú:"
    echo "  $0 to-github .env.production"
    echo "  $0 from-github .env.production"
}

# Î©îÏù∏
case "$MODE" in
    to-github)
        sync_to_github
        ;;
    from-github)
        sync_from_github
        ;;
    *)
        echo -e "${RED}‚ùå ÏûòÎ™ªÎêú Î™®Îìú: $MODE${NC}"
        echo ""
        show_help
        exit 1
        ;;
esac
