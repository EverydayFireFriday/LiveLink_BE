# /etc/nginx/nginx.conf

user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    keepalive_timeout 65;
    gzip on;

    # Upstream configuration for horizontal scaling
    # 🚀 여러 서버 인스턴스를 추가하여 로드 밸런싱 구성
    upstream app_backend {
        # ip_hash: 같은 클라이언트 IP는 항상 같은 서버로 라우팅 (sticky session)
        # Socket.IO Redis adapter를 사용하면 ip_hash 없이도 동작하지만,
        # 성능 최적화를 위해 같은 서버로 연결하는 것이 좋습니다.
        ip_hash;

        # 서버 인스턴스 목록 (필요에 따라 추가/제거)
        server app:3000 max_fails=3 fail_timeout=30s;
        # server app2:3000 max_fails=3 fail_timeout=30s;  # 추가 서버 예시
        # server app3:3000 max_fails=3 fail_timeout=30s;  # 추가 서버 예시

        # keepalive connections to upstream servers
        keepalive 32;
    }

    server {
        listen 80;
        server_name localhost; # Changed for local development

        location / {
            proxy_pass http://app_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;

            # Connection header for keepalive
            proxy_set_header Connection "";
        }

        # WebSocket support for chat with sticky session
        location /socket.io/ {
            proxy_pass http://app_backend/socket.io/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket timeout
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }

    }

    # For production, uncomment the following block and configure SSL certificates.
    # This setup assumes you are using Certbot for SSL certificate management.
    # server {
    #     listen 443 ssl http2;
    #     server_name your_domain.com; # Replace with your actual domain

    #     # SSL Certificate
    #     # ssl_certificate /etc/letsencrypt/live/your_domain.com/fullchain.pem; # Managed by Certbot
    #     # ssl_certificate_key /etc/letsencrypt/live/your_domain.com/privkey.pem; # Managed by Certbot
    #     # include /etc/letsencrypt/options-ssl-nginx.conf; # Recommended SSL settings
    #     # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # Recommended SSL settings

    #     location / {
    #         proxy_pass http://app_backend;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection "upgrade";
    #         proxy_read_timeout 86400;
    #     }

    #     location /socket.io/ {
    #         proxy_pass http://app_backend/socket.io/;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection "upgrade";
    #         proxy_set_header Host $host;
    #         proxy_cache_bypass $http_upgrade;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         proxy_read_timeout 86400;
    #         proxy_send_timeout 86400;
    #     }
    # }

}
